% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_info.R
\name{amatch_info}
\alias{amatch_info}
\title{amatch_info}
\usage{
amatch_info(competitionID, dateFrom, dateTo, seasonStarting, updateData,
  analysingToday = TRUE, KEYS, bypass = FALSE)
}
\arguments{
\item{competitionID}{An integer containing the competitionID that the
teams and match information belong to.}

\item{dateFrom}{A POSIXct value converted to dd.mm.yyyy format which denotes
the start date for querying the API.}

\item{dateTo}{A POSIXct value converted to dd.mm.yyyy format which denotes
the end date for querying the API.}

\item{updateData}{A boolean that is set to TRUE if team data is to be analysed
again, i.e. after a match. FALSE to ignore and only analyse new teams. Generally
set to FALSE for first time run.}

\item{analysingToday}{A boolean that is set to TRUE if data is being analysing today.
This is used to figure out if matches have been played during the time of
query, if not then wait until todays match has been played.}
}
\value{
Returns a match dataframe containing all match information to update
 events in a particular match. Redis is updated with match information.

Returns a NULL dataframe if no matches are found.
}
\description{
A function that takes a competitionID and season year to query
 for all the matches in a particular season and saves new teams to a set for
 later analysis.
}
\details{
Match information is stored in a hash map as;
    ->   [csm]:{comp_id}:{season}:{match_id}   ->   [HASH]
 The matches involved are first checked to see if they already exist
 in redis by checking the set;
    ->   [c_matchSetInfo]:{comp_id}   ->   [SET]
 The teams involved in the match are checked to see if they are new,
 by checking the set in redis;
    ->   [c_teamSetInfo]:{comp_id}   ->   [SET]
}
